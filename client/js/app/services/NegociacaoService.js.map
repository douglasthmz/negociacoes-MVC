{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","log","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEqual","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from '../services/ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService{\r\n    constructor(){\r\n        this._http=new HttpService();\r\n    }\r\n    \r\n    obterNegociacoesDaSemana(){\r\n\r\n        \r\n        \r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('nao foi possivel fazer');\r\n\r\n            }); \r\n    \r\n       \r\n    }\r\n\r\n\r\n\r\n    obterNegociacoesDaSemanaAnterior(){\r\n\r\n        \r\n        \r\n            return this._http\r\n                .get('negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    throw new Error('nao foi possivel fazer anterior');\r\n    \r\n                }); \r\n            \r\n    }\r\n    obterNegociacoesDaSemanaRetrasada(){\r\n\r\n            \r\n        \r\n                return this._http\r\n                    .get('negociacoes/retrasada')\r\n                    .then(negociacoes => {\r\n                        return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                    })\r\n                    .catch(erro => {\r\n                        console.log(erro);\r\n                        throw new Error('nao foi possivel fazer retrasada');\r\n        \r\n                    });  \r\n                \r\n\r\n    }\r\n\r\n\r\n    obterNegociacoes(){\r\n        return  Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()   \r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n            return negociacoes;\r\n\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n    }\r\n\r\n    cadastra(negociacao){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection=>new NegociacaoDao(connection))\r\n            .then(dao=>dao.adiciona(negociacao))\r\n            .then(()=>'Negociacão adicionada com sucesso')\r\n            .catch(erro =>{\r\n                console.log(erro);\r\n                throw new Error ('Não foi possível adicionar a negociação');\r\n            });\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory\r\n                .getConnection()\r\n                .then(connection=>new NegociacaoDao(connection))\r\n                .then(dao=>dao.listaTodos())\r\n                .catch(erro=>{\r\n                    console.log(erro);\r\n                    throw new Error('Não foi possivel listar');\r\n                })\r\n    }\r\n\r\n    apaga(){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection =>new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Apagamento bem sucedido')\r\n            .catch(erro=>{\r\n                console.log(erro)\r\n                throw new Error('Não foi possível apagar');\r\n            });\r\n        }\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes=>negociacoes.filter(negociacao =>\r\n                !listaAtual.some(negociacaoExistente =>\r\n                    negociacao.isEqual(negociacaoExistente)))\r\n            )\r\n            .catch(erro=>{\r\n                 console.log(erro);\r\n                 throw new Error('não foi possível importar');\r\n            })\r\n    }\r\n}"]}