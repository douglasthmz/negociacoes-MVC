{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["ConnectionFactory","stores","version","dbName","connection","close","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_createStore","e","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;AACA,IAAIA,oBAAqB,YAAW;AAChC,QAAMC,SAAS,CAAC,aAAD,CAAf;AACA,QAAMC,UAAU,CAAhB;AACA,QAAMC,SAAS,eAAf;;AAEA,QAAIC,aAAa,IAAjB;AACA,QAAIC,QAAO,IAAX;;AAEA;AACI,qCAAa;AAAA;;AACT,kBAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACH;;AAHL;AAAA;AAAA,4CAK0B;AAClB,uBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAClC,wBAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBV,MAAtB,EAA8BD,OAA9B,CAAlB;AACAQ,gCAAYI,eAAZ,GAA8B,aAAK;AAC/Bd,0CAAkBe,YAAlB,CAA+BC,EAAEC,MAAF,CAASC,MAAxC;AACH,qBAFD;AAGAR,gCAAYS,SAAZ,GAAwB,aAAI;AACxB,4BAAG,CAACf,UAAJ,EAAgB;AACZA,yCAAaY,EAAEC,MAAF,CAASC,MAAtB;AACAb,oCAAMD,WAAWC,KAAX,CAAiBe,IAAjB,CAAsBhB,UAAtB,CAAN;AACAA,uCAAWC,KAAX,GAAmB,YAAU;AACzB,sCAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH,6BAFD;AAGH;AACDE,gCAAQJ,UAAR;AACH,qBATD;AAUAM,gCAAYW,OAAZ,GAAsB,aAAI;AACtBC,gCAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASO,KAArB;AACAf,+BAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACH,qBAHD;AAIH,iBAnBM,CAAP;AAoBH;AA1BL;AAAA;AAAA,yCA4BwBrB,UA5BxB,EA4BmC;AAC3BH,uBAAOyB,OAAP,CAAe,iBAAQ;AACnB,wBAAGtB,WAAWuB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAH,EACAzB,WAAW0B,iBAAX;;AAEJ1B,+BAAW2B,iBAAX,CAA6BF,KAA7B,EAAoC,EAACG,eAAe,IAAhB,EAApC;AACC,iBALD;AAMH;AAnCL;AAAA;AAAA,8CAqC4B;AACpB,oBAAI5B,UAAJ,EAAgB;AACZC;AACAD,iCAAW,IAAX;AACH;AACJ;AA1CL;;AAAA;AAAA;AA4CH,CApDuB,EAAxB","file":"ConnectionFactory.js","sourcesContent":["\r\nvar ConnectionFactory = (function (){\r\n    const stores = ['negociacoes'];\r\n    const version = 4;\r\n    const dbName = 'negociacoesDB';\r\n    \r\n    var connection = null;\r\n    var close =null;\r\n\r\n    return class ConnectionFactory{\r\n        constructor(){\r\n            throw new Error('Não é possível instanciar esta classe');\r\n        }\r\n\r\n        static getConnection(){\r\n            return new Promise((resolve, reject)=>{\r\n                let openRequest = window.indexedDB.open(dbName, version);\r\n                openRequest.onupgradeneeded = e => {\r\n                    ConnectionFactory._createStore(e.target.result);\r\n                };\r\n                openRequest.onsuccess = e =>{\r\n                    if(!connection) {\r\n                        connection = e.target.result;\r\n                        close=connection.close.bind(connection);\r\n                        connection.close = function(){\r\n                            throw new Error(\"não é possível fechar a conexão\");\r\n                        };\r\n                    }\r\n                    resolve(connection);\r\n                };\r\n                openRequest.onerror = e =>{\r\n                    console.log(e.target.error);\r\n                    reject(e.target.error.name);\r\n                };\r\n            });\r\n        }\r\n\r\n        static _createStore(connection){\r\n            stores.forEach(store =>{\r\n                if(connection.objectStoreNames.contains(store)) \r\n                connection.deleteObjectStore\r\n\r\n            connection.createObjectStore(store, {autoIncrement: true});\r\n            });\r\n        }\r\n\r\n        static closeConnection(){\r\n            if (connection) {\r\n                close();\r\n                connection=null;\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\n"]}